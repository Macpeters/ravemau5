<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_air</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>par_player</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprites
event_inherited();
//keyboard_check(kRight) = keyboard_check(kLeft)
if(inAir == false &amp;&amp; keyboard_check(kRight) == keyboard_check(kLeft) &amp;&amp; sprite_index != spr_player_stand){
    sprite_index = spr_player_stand;
    image_index = 0;
}
if(inAir == false &amp;&amp; keyboard_check(kRight) != keyboard_check(kLeft) &amp;&amp; sprite_index != spr_player_run){
    sprite_index = spr_player_run;
    image_index = 0;
}
if(inAir == true){
    sprite_index = spr_player_air;
    if(vspd &lt;= -1){
        image_index = 0;
    }else if(vspd &gt;= 1){
        image_index = 2;
    }else{
        image_index = 1;
    }
}

//Direction
if(hspd &gt; 0){
    image_xscale = 1;
}else{
    image_xscale = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controls
if(keyboard_check(kJump) &amp;&amp; inAir == false){
   vspd = -15;
}
if(keyboard_check(kRight) &amp;&amp; !keyboard_check(kLeft) &amp;&amp; hspd &lt; 10){
    hspd = min(hspd+2, 10);
}
if(keyboard_check(kLeft) &amp;&amp; !keyboard_check(kRight) &amp;&amp; hspd &gt; -10){
    hspd = max(hspd-2, -10);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_hazard">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Die
x = xstart;
y = ystart;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
